service: lamda-serverless
frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221

functions:
  hello:
    handler: handler.hello
    events:
     - httpApi:
         path: /
         method: get
  imageResize:
    handler: handler.imageResize
    events:
     - httpApi:
         path: /imageResize
         method: get
  sendEmail:
    handler: handler.sendEmail
    events:
     - httpApi:
         path: /sendEmail
         method: get
  getUser:
    handler: lambdas/getUser.handler
    events:
     - http:
        path: get-user/{ID}
        method: GET
        cors: true

plugins:
    - serverless-offline
    - serverless-s3-sync

custom:
  TableName: test-table
  s3Sync:
        - bucketName: jareerserverlessprojectbucket-321321
          localDir: Uploads

resources:
    Resources:
      #AWS S3 Bucket 
      DemoBucketUpload:
        Type: AWS::S3::Bucket
        Properties:
          BucketName: jareerserverlessprojectbucket-321321

      # Dynamo DB
      MyDynamoDbTable:
        Type: AWS::DynamoDB::Table
        Properties:
          TableName: ${self:custom.TableName}
          AttributeDefinitions:
            - AttributeName: ID
              AttributeType: S
          KeySchema:
            - AttributeName: ID
              KeyType: HASH
          BillingMode: PAY_PER_REQUEST
          
